JOINs s√£o usados para combinar dados de duas ou mais tabelas com base em uma coluna relacionada entre elas.

38. INNER JOIN ‚Äì Traz registros que existem nas duas tabelas com correspond√™ncia
sql
Copiar
Editar
SELECT C.NomeCompleto, P.NumeroPedido
FROM TB_CLIENTE C
INNER JOIN TB_PEDIDO P
  ON C.ClienteId = P.ClienteId;
üü¢ Retorna apenas os clientes que t√™m pedidos registrados.

39. LEFT JOIN e RIGHT JOIN
LEFT JOIN ‚Äì Traz todos os registros da tabela da esquerda, mesmo sem correspond√™ncia
sql
Copiar
Editar
SELECT C.NomeCompleto, P.NumeroPedido
FROM TB_CLIENTE C
LEFT JOIN TB_PEDIDO P
  ON C.ClienteId = P.ClienteId;
üîç Clientes que t√™m ou n√£o t√™m pedidos.

RIGHT JOIN ‚Äì O oposto do LEFT: traz todos da tabela da direita
sql
Copiar
Editar
SELECT C.NomeCompleto, P.NumeroPedido
FROM TB_CLIENTE C
RIGHT JOIN TB_PEDIDO P
  ON C.ClienteId = P.ClienteId;
üîç Mostra todos os pedidos, mesmo que sem cliente associado.

40. CROSS JOIN ‚Äì Junta cada linha de uma tabela com todas as da outra
sql
Copiar
Editar
SELECT C.NomeCompleto, P.Descricao
FROM TB_CLIENTE C
CROSS JOIN TB_PRODUTO P;
‚ö†Ô∏è Gera produto cartesiano: se h√° 5 clientes e 10 produtos, teremos 50 linhas.

41. UPDATE e DELETE com JOIN
Atualizando dados com JOIN:
sql
Copiar
Editar
UPDATE P
SET P.Preco = P.Preco * 0.9
FROM TB_PRODUTO P
INNER JOIN TB_CATEGORIA C
  ON P.CategoriaId = C.CategoriaId
WHERE C.Descricao = 'Promo√ß√£o';
üü¢ Aplica 10% de desconto nos produtos da categoria "Promo√ß√£o".

Deletando com JOIN:
sql
Copiar
Editar
DELETE P
FROM TB_PRODUTO P
INNER JOIN TB_FORNECEDOR F
  ON P.FornecedorId = F.FornecedorId
WHERE F.Empresa = 'Fornecedor Antigo';
‚ö†Ô∏è Remove produtos de um fornecedor espec√≠fico.
