## üîÑ Transa√ß√µes no SQL Server

### üìò Defini√ß√£o

> "Uma transa√ß√£o √© uma **unidade l√≥gica de processamento** que tem como objetivo preservar a **integridade** e a **consist√™ncia dos dados**."

Toda vez que realizamos uma conex√£o com o MS-SQL, essa conex√£o recebe um n√∫mero de **sess√£o**, mesmo que seja feita pela mesma m√°quina e com o mesmo login. 
Isso permite rastrear opera√ß√µes e aplicar transa√ß√µes com seguran√ßa.

---

### üîê O que uma transa√ß√£o garante?

As transa√ß√µes seguem o modelo **ACID**, garantindo:

| Letra | Conceito       | Explica√ß√£o                                        |
|-------|----------------|---------------------------------------------------|
| A     | Atomicidade    | Tudo ou nada √© executado                         |
| C     | Consist√™ncia   | Dados sempre respeitam regras e restri√ß√µes       |
| I     | Isolamento     | Cada transa√ß√£o √© independente das outras         |
| D     | Durabilidade   | Dados confirmados persistem mesmo ap√≥s falhas    |

---

### üõ†Ô∏è Comandos principais

```sql
BEGIN TRANSACTION;

UPDATE Contas SET Saldo = Saldo - 100 WHERE ContaID = 1;
UPDATE Contas SET Saldo = Saldo + 100 WHERE ContaID = 2;

-- Se tudo estiver certo:
COMMIT;

-- Se houver erro:
-- ROLLBACK;


‚öôÔ∏è Transa√ß√µes impl√≠citas com DML (DELETE, INSERT, UPDATE)
Esses comandos j√° abrem uma transa√ß√£o automaticamente

Se o comando for bem-sucedido ‚Üí COMMIT impl√≠cito

Se ocorrer erro ‚Üí a transa√ß√£o √© desfeita


‚úÖ Boas pr√°ticas com transa√ß√µes
Use BEGIN TRANSACTION manualmente em opera√ß√µes cr√≠ticas

Combine com TRY...CATCH e ROLLBACK para maior controle

Evite deixar transa√ß√µes abertas (podem travar o banco)

Use @@TRANCOUNT para verificar se h√° transa√ß√µes ativas
